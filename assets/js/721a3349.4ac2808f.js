"use strict";(self.webpackChunkpoco_knowledgebase=self.webpackChunkpoco_knowledgebase||[]).push([[1828],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),u=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(r),m=n,h=c["".concat(l,".").concat(m)]||c[m]||d[m]||o;return r?a.createElement(h,i(i({ref:t},p),{},{components:r})):a.createElement(h,i({ref:t},p))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:n,i[1]=s;for(var u=2;u<o;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3265:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:4},i="PRD | Integration With Freshsales",s={unversionedId:"Documentations/PRD-Integration-Freshsale",id:"Documentations/PRD-Integration-Freshsale",title:"PRD | Integration With Freshsales",description:"Why are we building?",source:"@site/docs/Documentations/PRD-Integration-Freshsale.mdx",sourceDirName:"Documentations",slug:"/Documentations/PRD-Integration-Freshsale",permalink:"/poco-knowledgebase/docs/Documentations/PRD-Integration-Freshsale",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Documentations/PRD-Integration-Freshsale.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"PRD | Emergency QR Code for beneficiary",permalink:"/poco-knowledgebase/docs/Documentations/PRD-Emergency-QR"},next:{title:"PRD | Integration with Freshdesk",permalink:"/poco-knowledgebase/docs/Documentations/PRD-Integration-FreshDesk"}},l={},u=[{value:"Why are we building?",id:"why-are-we-building",level:2},{value:"User Story",id:"user-story",level:2},{value:"User Type",id:"user-type",level:2},{value:"Features",id:"features",level:2},{value:"User Flow",id:"user-flow",level:2},{value:"Non-Functional requirements:",id:"non-functional-requirements",level:2}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"prd--integration-with-freshsales"},"PRD | Integration With Freshsales"),(0,n.kt)("h2",{id:"why-are-we-building"},"Why are we building?"),(0,n.kt)("p",null,"All the users information will be synced with the Freshsales platform to keep the regularly updated data. "),(0,n.kt)("h2",{id:"user-story"},"User Story"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Registering user will be updated in the Freshsales as new contact. "),(0,n.kt)("li",{parentName:"ul"},"When a new family member is added by the registered users. "),(0,n.kt)("li",{parentName:"ul"},"User updates their information on Pococare platform and the data should be updated in the Freshsales platform. "),(0,n.kt)("li",{parentName:"ul"},"Agent is manually updating the user information, then the data should be synced across the Pococare & Freshsales platform (Refer to Freshsales to Freshdesk Integration PRD)"),(0,n.kt)("li",{parentName:"ul"},"User is updating their information via any Forms over WhatsApp/Email/Google Form then the updated information should be synced between the Pococare Platform and Freshsales. "),(0,n.kt)("li",{parentName:"ul"},"User information can be deleted/Soft delete from the Freshales and Pococare platform based  on the requirements from our customers. ")),(0,n.kt)("h2",{id:"user-type"},"User Type"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Registered Users"),(0,n.kt)("li",{parentName:"ul"},"Beneficiary Users")),(0,n.kt)("h2",{id:"features"},"Features"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Create a contact for every new registering user on Pococare platform"),(0,n.kt)("li",{parentName:"ul"},"Create a contact for the new beneficiary users added on the pococare platform. "),(0,n.kt)("li",{parentName:"ul"},"Agents can identify the users for whom the data fields are filled/not filled"),(0,n.kt)("li",{parentName:"ul"},"Agents can trigger WhatsApp/Emails to users based on their data. "),(0,n.kt)("li",{parentName:"ul"},"Information updated by the users on the pococare platform is synced with Freshsales"),(0,n.kt)("li",{parentName:"ul"},"Freshsales and Freshdesk are synced to update the information updated by the agents in Freshdesk.")),(0,n.kt)("h2",{id:"user-flow"},"User Flow"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h3",{parentName:"li",id:"creation-of-user-information-in-freshsales"},"Creation of user information in Freshsales")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"}," Registering Users ")," "),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Users registers on the Pococare platform by verifying their email address/Mobile number\nA user is created in Freshsales as new contact. "))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"}," Beneficiary Users ")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"For all the family members added on the pococare platform > a user is created in Freshsales as a new contact. "))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"}," Addition of users from the Backend (Exceptional case only) ")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"New users updated in the pococare DB will be updated on the Freshsales")))),(0,n.kt)("admonition",{title:"Note",type:"tip"},(0,n.kt)("p",{parentName:"admonition"}," Every new contact added on Freshsales will be identified using the Unique external ID, ie Unique Beneficiary ID.")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"}," Updation of user information ")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"For all the beneficiaries, if any information is updated by the user on the pococare platform, the updated information should be synced with the Freshsales. ")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"User updated the information via Forms sent over WhatsApp/Email, then the updated information should be in sync between the pococare platform and Freshsales. ")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"}," Reading of user information ")," "),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Agents can make an outbound call to user by reading the user information across Freshsales. "),(0,n.kt)("li",{parentName:"ul"},"Agents can get the details of the information filled or Not filled by the users, and can trigger nudge messages to the users based on that to get the complete information from users. ")))),(0,n.kt)("h2",{id:"non-functional-requirements"},"Non-Functional requirements:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Every user added as contact in Freshsales should be identified by a unique beneficiary ID. "),(0,n.kt)("li",{parentName:"ul"},"The sync between the Pococare platform and Freshsales should be real time basis. "),(0,n.kt)("li",{parentName:"ul"},"User field in Freshsales should be customisation with the user information pococare is collecting.")))}c.isMDXComponent=!0}}]);